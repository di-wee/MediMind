---
- name: Deploy MediMind Application with Docker
  hosts: medimind_servers
  become: yes
  vars:
    app_user: ubuntu
    app_dir: /home/{{ app_user }}/MediMind
    backend_service: medimind-docker
    dockerhub_username: "{{ lookup('env', 'DOCKERHUB_USERNAME') }}"
    db_username: "{{ lookup('env', 'DB_USERNAME') }}"
    db_password: "{{ lookup('env', 'DB_PASSWORD') }}"
    db_host: "{{ lookup('env', 'DB_HOST') }}"
    db_port: "{{ lookup('env', 'DB_PORT') }}"
    db_name: "{{ lookup('env', 'DB_NAME') }}"

  tasks:
    - name: Update package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - docker.io
          - git
          - curl
        state: present

    - name: Install Docker Compose plugin
      shell: |
        mkdir -p ~/.docker/cli-plugins/
        curl -SL https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
        chmod +x ~/.docker/cli-plugins/docker-compose
      args:
        creates: ~/.docker/cli-plugins/docker-compose
      register: docker_compose_install

    - name: Start and enable Docker
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Wait for Docker to be ready
      shell: docker info
      register: docker_ready
      retries: 10
      delay: 5
      until: docker_ready.rc == 0
      ignore_errors: yes

    - name: Add ubuntu user to docker group
      user:
        name: '{{ app_user }}'
        groups: docker
        append: yes

    - name: Ensure ubuntu user can access Docker socket
      file:
        path: /var/run/docker.sock
        mode: '0666'
        state: file

    - name: Install Docker Compose plugin for ubuntu user
      shell: |
        mkdir -p /home/{{ app_user }}/.docker/cli-plugins/
        curl -SL https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-linux-x86_64 -o /home/{{ app_user }}/.docker/cli-plugins/docker-compose
        chmod +x /home/{{ app_user }}/.docker/cli-plugins/docker-compose
        chown -R {{ app_user }}:{{ app_user }} /home/{{ app_user }}/.docker
      args:
        creates: /home/{{ app_user }}/.docker/cli-plugins/docker-compose
      register: docker_compose_user_install

    - name: Verify Docker Compose plugin installation
      shell: docker compose version
      become_user: '{{ app_user }}'
      register: docker_compose_version
      changed_when: false

    - name: Create application directory
      file:
        path: '{{ app_dir }}'
        state: directory
        owner: '{{ app_user }}'
        group: '{{ app_user }}'
        mode: '0755'

    - name: Clone or update repository
      git:
        repo: https://github.com/di-wee/MediMind.git
        dest: '{{ app_dir }}'
        version: main
        force: yes

    - name: Create docker-compose.yml
      template:
        src: docker-compose.yml.j2
        dest: '{{ app_dir }}/docker-compose.yml'
        owner: '{{ app_user }}'
        group: '{{ app_user }}'
        mode: '0644'

    - name: Pull latest Docker images
      community.docker.docker_compose_v2:
        project_src: '{{ app_dir }}'
        pull: always
      become_user: '{{ app_user }}'

    - name: Create docker-compose systemd service
      template:
        src: docker-compose.service.j2
        dest: /etc/systemd/system/{{ backend_service }}.service
        mode: '0644'
      notify: restart docker-compose service

    - name: Start and enable docker-compose service
      systemd:
        name: '{{ backend_service }}'
        state: started
        enabled: yes
        daemon_reload: yes

  handlers:
    - name: restart docker-compose service
      systemd:
        name: '{{ backend_service }}'
        state: restarted
        daemon_reload: yes
