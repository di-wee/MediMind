name: "Generate Final CI/CD Report"

on:
  workflow_run:
    workflows:
      - "Linting CI & Build"
      - "SCA - Dependency Scan"
      - "SAST - Static Code Analysis & Build"
    types:
      - completed

jobs:
  final-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ---------------------
      # Download all artifacts from triggering workflow runs
      # ---------------------
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare Final Report Folder
        run: mkdir -p artifacts/final

      - name: Generate Final Report
        run: |
          report_file="artifacts/final/final-report.txt"
          echo "======================" > $report_file
          echo "MediMind CI/CD Final Report - $(date)" >> $report_file
          echo "======================" >> $report_file
          echo "" >> $report_file

          # ---------------------
          # Linting Summary
          # ---------------------
          echo "=== Linting Summary ===" >> $report_file
          if [ -f artifacts/eslint-report/eslint-report.txt ]; then
            errors=$(grep -c "error" artifacts/eslint-report/eslint-report.txt || true)
            echo "- Frontend (ESLint) Errors: $errors" >> $report_file
          else
            echo "- Frontend lint report not found" >> $report_file
          fi

          if [ -f artifacts/pylint-report/pylint-report.txt ]; then
            errors=$(grep -c "error" artifacts/pylint-report/pylint-report.txt || true)
            echo "- ML (Pylint) Errors: $errors" >> $report_file
          else
            echo "- Python ML lint report not found" >> $report_file
          fi

          if [ -f artifacts/nbqa-notebook-report/nbqa-notebook-report.txt ]; then
            errors=$(grep -c "error" artifacts/nbqa-notebook-report/nbqa-notebook-report.txt || true)
            echo "- Jupyter Notebook Lint Errors: $errors" >> $report_file
          else
            echo "- Jupyter notebook lint report not found" >> $report_file
          fi

          if ls artifacts/android-lint-report/lint-results-*.html 1> /dev/null 2>&1; then
            echo "- Android Lint: Generated (view HTML in artifact)" >> $report_file
          else
            echo "- Android lint report not found" >> $report_file
          fi
          echo "" >> $report_file

          # ---------------------
          # SCA Summary
          # ---------------------
          echo "=== SCA (Dependency Scan) Summary ===" >> $report_file
          if [ -f artifacts/snyk-node-report/snyk-node-report.json ]; then
            vulns=$(jq '.vulnerabilities | length' artifacts/snyk-node-report/snyk-node-report.json)
            echo "- Frontend Vulnerabilities: $vulns" >> $report_file
          else
            echo "- Frontend SCA report not found" >> $report_file
          fi

          if [ -f artifacts/snyk-java-report/snyk-java-report.json ]; then
            vulns=$(jq '.vulnerabilities | length' artifacts/snyk-java-report/snyk-java-report.json)
            echo "- Backend Vulnerabilities: $vulns" >> $report_file
          else
            echo "- Backend SCA report not found" >> $report_file
          fi

          if [ -f artifacts/pip-audit-report/pip-audit-report.json ]; then
            vulns=$(jq '.dependencies | length' artifacts/pip-audit-report/pip-audit-report.json)
            echo "- ML Dependencies Checked: $vulns" >> $report_file
          else
            echo "- Python ML SCA report not found" >> $report_file
          fi
          echo "" >> $report_file

          # ---------------------
          # SAST Summary
          # ---------------------
          echo "=== SAST (CodeQL) Summary ===" >> $report_file
          echo "See GitHub Security tab for full CodeQL results." >> $report_file
          echo "" >> $report_file

          # ---------------------
          # Unit Test Summary
          # ---------------------
          echo "=== Unit Test Summary ===" >> $report_file
          if ls backend/target/surefire-reports/*.xml 1> /dev/null 2>&1; then
            total=$(grep "<testsuite" backend/target/surefire-reports/*.xml | wc -l)
            failures=$(grep "<failure" backend/target/surefire-reports/*.xml | wc -l)
            echo "Total Test Suites: $total, Failures: $failures" >> $report_file
          else
            echo "No unit test results found." >> $report_file
          fi

      # ---------------------
      # Upload final report
      # ---------------------
      - name: Upload Final Report
        uses: actions/upload-artifact@v4
        with:
          name: final-report
          path: artifacts/final/final-report.txt
