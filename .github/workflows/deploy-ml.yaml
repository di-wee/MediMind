name: Build & Deploy ML (HF-pinned Docker â†’ EC2)

on:
  push:
    branches: ["ML-Priscilla"]
    paths:
      - "ml/**"
      - ".github/workflows/deploy-ml.yaml"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read HF model SHA
        id: readsha
        run: |
          if [ ! -s ml/model_version.txt ]; then
            echo "ERROR: ml/model_version.txt is missing or empty. Run ml/tools/push_model_and_bump_git.py first."
            exit 1
          fi
          echo "HF_SHA=$(head -n1 ml/model_version.txt | tr -d '\r\n')" >> $GITHUB_OUTPUT
          echo "Using HF SHA: $(head -n1 ml/model_version.txt)"

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # If your Dockerfile is inside ml/, build with that context
      - name: Build image (HF-pinned)
        run: |
          docker build \
            -f ml/Dockerfile \
            ml \
            --build-arg HF_MODEL_ID=prizellia/ner-medimind \
            --build-arg HF_REV=${{ steps.readsha.outputs.HF_SHA }} \
            --build-arg HF_TOKEN=${{ secrets.HF_TOKEN }} \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/nerapp:${{ steps.readsha.outputs.HF_SHA }} \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/nerapp:latest

      - name: Push image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nerapp:${{ steps.readsha.outputs.HF_SHA }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nerapp:latest

      - name: Add EC2 host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2ML_IP }} >> ~/.ssh/known_hosts

      - name: Write SSH key
        run: |
          echo "${{ secrets.EC2ML_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Redeploy on EC2 (Docker)
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2ML_USER }}@${{ secrets.EC2ML_IP }} "bash -lc '
            set -e
            IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/nerapp:${{ steps.readsha.outputs.HF_SHA }}
            CONTAINER=nerapi

            if ! command -v docker >/dev/null 2>&1; then
              echo "Docker not found. Installing..."
              curl -fsSL https://get.docker.com | sh
            fi

            sudo docker pull $IMAGE
            (sudo docker rm -f $CONTAINER || true)
            sudo docker run -d --name $CONTAINER \
              -p 8000:8000 \
              --restart unless-stopped \
              $IMAGE

            sudo docker image prune -f
          '"
