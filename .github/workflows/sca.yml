name: "SCA - Dependency & Image Scan (Trivy)"

on:
  push:
    branches:
      - main
      - frontend-(react)
      - backend-(java-springboot)
      - android
      - machine-learning
  pull_request:
    branches:
      - main

jobs:
  trivy-scan:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Install Trivy
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          sudo mv ./bin/trivy /usr/local/bin/trivy
          trivy --version

      # Create artifact directory
      - name: Prepare Artifact Directory
        run: mkdir -p artifacts/trivy

      # Scan project dependencies for vulnerabilities (FS scan)
      - name: Trivy File System Scan
        run: |
          trivy fs --security-checks vuln --severity HIGH,CRITICAL --format table --output artifacts/trivy/fs-vuln-report.txt .
          trivy fs --security-checks vuln --severity HIGH,CRITICAL --format json --output artifacts/trivy/fs-vuln-report.json .

      # Optional: Scan Docker images if you have images built in previous jobs
      # Example for backend image:
      # - name: Docker Login
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Scan Backend Docker Image
      #   run: |
      #     docker pull ${{ secrets.DOCKERHUB_USERNAME }}/medimind-backend:latest
      #     trivy image --severity HIGH,CRITICAL --format table --output artifacts/trivy/backend-image-report.txt ${{ secrets.DOCKERHUB_USERNAME }}/medimind-backend:latest

      # Upload all reports as artifact
      - name: Upload Trivy Reports
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report
          path: artifacts/trivy
