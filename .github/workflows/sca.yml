name: "SCA - Dependency Vulnerability Scan & Build"

on:
  push:
    branches:
      - main
      - frontend
      - backend
      - android
      - ml
  pull_request:
    branches:
      - main

jobs:
  sca:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      # --- React (Node.js) ---
      - name: Install Node.js dependencies
        working-directory: ./frontend
        run: npm install
      - name: Snyk Scan (React)
        working-directory: ./frontend
        run: snyk test --file=package.json --json > snyk-node-report.json || echo '{}' > snyk-node-report.json
      - uses: actions/upload-artifact@v4
        with:
          name: snyk-node-report
          path: frontend/snyk-node-report.json

      # --- Java (Spring Boot) ---
      - name: Snyk Scan (Java Maven)
        working-directory: ./backend
        run: snyk test --file=pom.xml --json-file-output=snyk-java-report.json || true
      - uses: actions/upload-artifact@v4
        with:
          name: snyk-java-report
          path: backend/snyk-java-report.json

      # --- Python (ML) ---
      - name: Install Python dependencies
        working-directory: ./ml
        run: |
          pip install -r requirements.txt
          pip install torch torchvision torchaudio pip-audit || true
      - name: Python Dependency Audit (pip-audit)
        working-directory: ./ml
        run: pip-audit -r requirements.txt -f json -o pip-audit-report.json || true
      - uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: ml/pip-audit-report.json

      # ---------------------
      # Automated Build
      # ---------------------
      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build Spring Boot Backend
        working-directory: ./backend
        run: mvn clean package -DskipTests
      - uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/target/*.jar

      - name: Build React Frontend
        working-directory: ./frontend
        run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/

      - name: Build Android App (Debug APK)
        working-directory: ./android
        run: ./gradlew assembleDebug
      - uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/debug/*.apk
