name: "SCA - Dependency Scan (Trivy)"

on:
  push:
    branches:
      - main
      - frontend-(react)
      - backend-(java-springboot)
      - android
      - machine-learning
  pull_request:
    branches:
      - main

jobs:
  sca-trivy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ---------------------
      # Set up Java 21 for backend build
      # ---------------------
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      # ---------------------
      # Install Trivy
      # ---------------------
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          sudo mv ./bin/trivy /usr/local/bin/

      # Prepare artifact directory
      - name: Prepare Artifact Directory
        run: mkdir -p artifacts/sca

      # ---------------------
      # Backend (Java) Scan
      # ---------------------
      - name: Scan Backend (Java)
        working-directory: ./backend
        run: |
          mkdir -p ../artifacts/sca
          # Clean old builds to avoid stale jars
          mvn clean package -DskipTests
          # Scan current folder (including target)
          trivy fs --security-checks vuln --ignore-unfixed \
            --format json \
            --output ../artifacts/sca/backend-trivy.json .

      # ---------------------
      # Frontend (Node.js) Scan
      # ---------------------
      - name: Scan Frontend (Node.js)
        working-directory: ./frontend
        run: |
          npm install
          trivy fs --security-checks vuln --format json --output ../artifacts/sca/frontend-trivy.json .

      # ---------------------
      # ML (Python) Scan
      # ---------------------
      - name: Scan Python ML
        working-directory: ./ml
        run: |
          pip install -r requirements.txt || true
          trivy fs --security-checks vuln --format json --output ../artifacts/sca/ml-trivy.json .

      # ---------------------
      # Android Scan (APK)
      # ---------------------
      - name: Build Android APK
        working-directory: ./android
        run: ./gradlew assembleDebug

      - name: Scan Android APK with Trivy
        run: |
          APK_PATH=$(find android/app/build/outputs/apk/debug -name "*.apk" | head -n 1)
          echo "Scanning APK: $APK_PATH"
          trivy fs --scanners vuln --format json --output artifacts/sca/android-trivy.json "$APK_PATH"

      # ---------------------
      # Generate Human-Readable SCA Summary
      # ---------------------
      - name: Generate Human-Readable SCA Summary
        run: |
          JSON_FILE="artifacts/sca/backend-trivy.json"
          SUMMARY_FILE="artifacts/sca/sca-summary.txt"
          mkdir -p artifacts/sca

          if [ ! -s "$JSON_FILE" ]; then
            echo "No vulnerabilities found." > "$SUMMARY_FILE"
          else
            vuln_count=$(jq '[.Results[] | select(.Vulnerabilities != null) | .Vulnerabilities[]] | length' "$JSON_FILE")
            
            if [ "$vuln_count" -eq 0 ]; then
              echo "No vulnerabilities found." > "$SUMMARY_FILE"
            else
              echo "Found $vuln_count vulnerabilities:" > "$SUMMARY_FILE"
              jq -r '
                .Results[]
                | select(.Vulnerabilities != null)
                | .Vulnerabilities[]
                | "\(.VulnerabilityID) | \(.Severity) | \(.PkgName) \(.InstalledVersion) -> Fixed in \(.FixedVersion // "N/A")"
              ' "$JSON_FILE" >> "$SUMMARY_FILE"
            fi
          fi

      # ---------------------
      # Upload SCA Reports & Summary
      # ---------------------
      - name: Upload SCA Reports
        uses: actions/upload-artifact@v4
        with:
          name: sca-trivy-reports
          path: artifacts/sca/

      - name: Upload SCA summary
        uses: actions/upload-artifact@v4
        with:
          name: sca-summary
          path: artifacts/sca/sca-summary.txt
